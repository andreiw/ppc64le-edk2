TianoCore on PowerPC 64 Little-Endian (OPAL/PowerNV)
====================================================

This is "UEFI" on top of OPAL firmware.

"UEFI" because the specification doesn't include PowerPC yet (ever?).

At some point this experiment will implement reduced-hardware
"ACPI" support, mapping the OPAL-based FDT into "ACPI" structures.

"ACPI" because it's also not specced out for PowerPC.

It's getting prototyped on top of QEMU and Skiboot (OPAL firmware).

I feel a sense of Deja Vu...
============================
This is not at all related to Benjamin Herrenschmidt's
PowerNV EDK2 tree over at his GitHub.

That tree is the one you should probably be looking at.

https://github.com/ozbenh/edk2

But if are interested in an alternate and completely
unrelated implementation, that is most certainly
never going to go anywhere beyond a proof of concept,
then read on :-).

Why
===

It's thought experiment gone too far. In short, there's IMO
value in presenting a common firmware environment shared with
other servers (X64, AARCH64). UEFI+ACPI keep the OEMs and IHVs in their
comfort zone, and reduce pointless platform boot and configuration
variance across different architectures. It also allows plug-in cards
to work (assuming EBC ROMs). Petitboot is a nice idea in theory,
but in practice it's probably more suitable to embedded environments
rather than whitebox servers that can compete with Intel boxes.

UEFI gets us a bootloader environment and device drivers for
I/O and booting via storage and networking. OPAL is the abstraction
layer for the machine.

Status
======

Can boot to UEFI shell. As far as devices only the OPAL console
is available.

See outstanding milestones and issues:
https://github.com/andreiw/ppc64le-edk2/issues

Building
========

You will need a LE 64-bit toolchain to build (i.e. ppc64le-linux).
A good source of toolchains is kernel.org.

After running ./edksetup.sh, modify your Conf/target.txt:
ACTIVE_PLATFORM       = PPC64Pkg/PPC64Pkg.dsc
TOOL_CHAIN_TAG        = GCC49

Then:
$ GCC49_PPC64_PREFIX=ppc64le-linux- build

Running
=======

You will need Skiboot and Benjamin Herrenschmidt's PowerNV QEMU tree.

Good directions for both QEMU/PowerNV and Skiboot:
https://www.flamingspork.com/blog/2015/08/28/running-opal-in-qemu-the-powernv-platform/

After that, assuming skiboot.lid is in current working directory,
$ qemu-system-ppc64 -m 4G -M powernv -nographic -kernel ~/src/edk2/Build/PPC64/DEBUG_GCC49/FV/POWERNV.fd

You should see skiboot messages, followed by something like:

[1224294270,5] INIT: Starting kernel at 0x20000078, fdt at 0x30350798 (size 0x2d21)
PPC64LE UEFI firmware (PPC64LE Prototype built at 02:45:10 on Oct 14 2015)
TB 512000000 Hz
System RAM @ 0x0 - 0xFFFFFFFF
Ipl total @ 0x20000000-0x20911000
Ipl used  @ 0x20000000-0x20511000
Stack     @ 0x20500000-0x20510000
Ipl free  @ 0x20511000-0x20911000
FDT @ 0x2090E000-0x20910D21
/memreserve/ [0x31C00000-0x31C20000) -> RT
/memreserve/ [0x31000000-0x31C00000) -> RT
/memreserve/ [0x30300000-0x31000000) -> RT
/memreserve/ [0x30000000-0x30300000) -> RT
/memreserve/ [0x39C00000-0x39DC1000) -> RT
Loading DxeCore at 0x00208CA000 EntryPoint=0x0020908460
CoreInitializeMemoryServices:
  BaseAddress - 0x20512000 Length - 0x3B8000 MinimalMemorySizeNeeded - 0x10000
  InstallProtocolInterface: 5B1B31A1-9562-11D2-8E3F-00A0C969723B 20907418
  HOBLIST address in DXE = 0xFFFFF018
  Memory Allocation 0x00000004 0x20000000 - 0x20510FFF
  Memory Allocation 0x00000003 0x0 - 0x1FFF
  Memory Allocation 0x00000004 0x2090E000 - 0x20910FFF
  Memory Allocation 0x00000006 0x31C00000 - 0x31C1FFFF
  Memory Allocation 0x00000006 0x31000000 - 0x31BFFFFF
  Memory Allocation 0x00000006 0x30300000 - 0x30FFFFFF
  Memory Allocation 0x00000006 0x30000000 - 0x302FFFFF
  Memory Allocation 0x00000006 0x39C00000 - 0x39DC0FFF
  Memory Allocation 0x00000004 0x20500000 - 0x2050FFFF
  Memory Allocation 0x00000004 0x208CA000 - 0x2090DFFF
  Memory Allocation 0x00000003 0x208CA000 - 0x2090DFFF
  FV Hob            0x20004000 - 0x204FFFFF
  InstallProtocolInterface: D8117CFE-94A6-11D4-9A3A-0090273FC14D 209073A8
  InstallProtocolInterface: 8F644FA9-E850-4DB1-9CE2-0B44698E8DA4 FFFFB530
  InstallProtocolInterface: 09576E91-6D3F-11D2-8E39-00A0C969723B FFFFB7D8
  InstallProtocolInterface: 220E73B6-6BDB-4413-8405-B974B108619A FFFF69B0
  InstallProtocolInterface: FC1BCDB0-7D31-49AA-936A-A4600D9DD083 209073C8
  Loading driver 80CF7257-87AB-47F9-A3FE-D50B76D89541
  InstallProtocolInterface: 5B1B31A1-9562-11D2-8E3F-00A0C969723B FFE8F280
  Loading driver at 0x000FFE0B000 EntryPoint=0x000FFE191E8 PcdDxe.efi
  InstallProtocolInterface: BC62157E-3E33-4FEC-9920-2D3B36D750DF FFE8F458
  InstallProtocolInterface: 11B34006-D85B-4D0A-A290-D5A571310EF7 FFE19020
  InstallProtocolInterface: 13A3F0F6-264A-3EF0-F2E0-DEC512342F34 FFE19118
  InstallProtocolInterface: 5BE40F57-FA68-4610-BBBF-E9C5FCDAD365 FFE191A8
  InstallProtocolInterface: FD0F4478-0EFD-461D-BA2D-E58C45FD5F5E FFE191C0
  Loading driver B8D9444E-D72A-451F-9BDB-BAFB52A68415
  InstallProtocolInterface: 5B1B31A1-9562-11D2-8E3F-00A0C969723B FFE2D280
  Loading driver at 0x000FFE01000 EntryPoint=0x000FFE09068 PPC64CpuDxe.efi
  InstallProtocolInterface: BC62157E-3E33-4FEC-9920-2D3B36D750DF FFE2D6D8
  [1298517048,3] OPAL: Trying a CPU re-init with flags: 0x2
  InstallProtocolInterface: 26BACCB1-6F42-11D4-BCE7-0080C73C8881 FFE09008
  Loading driver B601F8C4-43B7-4784-95B1-F4226CB40CEE
  InstallProtocolInterface: 5B1B31A1-9562-11D2-8E3F-00A0C969723B FFE2C180
  Loading driver at 0x000FFDF7000 EntryPoint=0x000FFDFF078 RuntimeDxe.efi
  InstallProtocolInterface: BC62157E-3E33-4FEC-9920-2D3B36D750DF FFE2CCD8
  InstallProtocolInterface: B7DFB4E1-052F-449F-87BE-9818FC91B733 FFDFF008
  Loading driver F80697E9-7FD6-4665-8646-88E33EF71DFC
  InstallProtocolInterface: 5B1B31A1-9562-11D2-8E3F-00A0C969723B FFE2C400
  Loading driver at 0x000FFDE8000 EntryPoint=0x000FFDF0038 SecurityStubDxe.efi
  InstallProtocolInterface: BC62157E-3E33-4FEC-9920-2D3B36D750DF FFE2C858
  InstallProtocolInterface: 94AB2F58-1438-4EF1-9152-18941A3A0E68 FFDF0010
  InstallProtocolInterface: A46423E3-4617-49F1-B9FF-D1BFA9115839 FFDF0008
  Loading driver 02B01AD5-7E59-43E8-A6D8-238180613A5A
  InstallProtocolInterface: 5B1B31A1-9562-11D2-8E3F-00A0C969723B FFE29A80
  Loading driver at 0x000FFDCB000 EntryPoint=0x000FFDD7028 EmuVariableRuntimeDxe.efi
  InstallProtocolInterface: BC62157E-3E33-4FEC-9920-2D3B36D750DF FFE29E18
  InstallProtocolInterface: 1E5668E2-8481-11D4-BCF1-0080C73C8881 0
  InstallProtocolInterface: 6441F818-6362-4E44-B570-7DBA31DD2453 0
  Loading driver 4B28E4C7-FF36-4E10-93CF-A82159E777C5
  InstallProtocolInterface: 5B1B31A1-9562-11D2-8E3F-00A0C969723B FFE29440
  Loading driver at 0x000FFDA0000 EntryPoint=0x000FFDA7028 ResetSystemRuntimeDxe.efi
  InstallProtocolInterface: BC62157E-3E33-4FEC-9920-2D3B36D750DF FFE1EE58
  InstallProtocolInterface: 27CFAC88-46CC-11D4-9A38-0090273FC14D 0
  Loading driver B336F62D-4135-4A55-AE4E-4971BBF0885D
  InstallProtocolInterface: 5B1B31A1-9562-11D2-8E3F-00A0C969723B FFE1E140
  Loading driver at 0x000FFD97000 EntryPoint=0x000FFD9E068 RealTimeClock.efi
  InstallProtocolInterface: BC62157E-3E33-4FEC-9920-2D3B36D750DF FFE1E318
  InstallProtocolInterface: 27CFAC87-46CC-11D4-9A38-0090273FC14D 0
  Loading driver 4C6E0267-C77D-410D-8100-1495911A989D
  InstallProtocolInterface: 5B1B31A1-9562-11D2-8E3F-00A0C969723B FFE1D0C0
  Loading driver at 0x000FFD8F000 EntryPoint=0x000FFD95038 MetronomeDxe.efi
  InstallProtocolInterface: BC62157E-3E33-4FEC-9920-2D3B36D750DF FFE1DE58
  InstallProtocolInterface: 26BACCB2-6F42-11D4-BCE7-0080C73C8881 FFD95008
  Loading driver 348C4D62-BFBD-4882-9ECE-C80BB1C4783B
  InstallProtocolInterface: 5B1B31A1-9562-11D2-8E3F-00A0C969723B FFE1D2C0
  Loading driver at 0x000FFD22000 EntryPoint=0x000FFD55228 HiiDatabase.efi
  InstallProtocolInterface: BC62157E-3E33-4FEC-9920-2D3B36D750DF FFE1DA58
  InstallProtocolInterface: E9CA4775-8657-47FC-97E7-7ED65A084324 FFD55030
  InstallProtocolInterface: 0FD96974-23AA-4CDC-B9CB-98D17750322A FFD55078
  InstallProtocolInterface: EF9FC172-A1B2-4693-B327-6D32FC416042 FFD550A0
  InstallProtocolInterface: 587E72D7-CC50-4F79-8209-CA291FC1A10F FFD550F8
  InstallProtocolInterface: 0A8BADD5-03B8-4D19-B128-7B8F0EDAA596 FFD55128
  InstallProtocolInterface: 31A6406A-6BDF-4E46-B2A2-EBAA89C40920 FFD55050
  Loading driver D3987D4B-971A-435F-8CAF-4967EB627241
  InstallProtocolInterface: 5B1B31A1-9562-11D2-8E3F-00A0C969723B FFE1C140
  Loading driver at 0x000FFD87000 EntryPoint=0x000FFD8D0B8 SerialDxe.efi
  InstallProtocolInterface: BC62157E-3E33-4FEC-9920-2D3B36D750DF FFE1C858
  InstallProtocolInterface: BB25CF6F-F1D4-11D2-9A0C-0090273FC1FD FFD8D058
  InstallProtocolInterface: 09576E91-6D3F-11D2-8E39-00A0C969723B FFD8D008
  Loading driver 9B680FCE-AD6B-4F3A-B60B-F59899003443
  InstallProtocolInterface: 5B1B31A1-9562-11D2-8E3F-00A0C969723B FFDE7040
  Loading driver at 0x000FFD09000 EntryPoint=0x000FFD1E5C8 DevicePathDxe.efi
  InstallProtocolInterface: BC62157E-3E33-4FEC-9920-2D3B36D750DF FFDE7E58
  InstallProtocolInterface: 0379BE4E-D706-437D-B037-EDB82FB772A4 FFD1E010
  InstallProtocolInterface: 8B843E20-8132-4852-90CC-551A4E4A7F1C FFD1E050
  InstallProtocolInterface: 05C99A21-C70F-4AD2-8A5F-35DF3343F51E FFD1E060
  Loading driver 49EA041E-6752-42CA-B0B1-7344FE2546B7
  InstallProtocolInterface: 5B1B31A1-9562-11D2-8E3F-00A0C969723B FFDE7340
  Loading driver at 0x000FFD7F000 EntryPoint=0x000FFD85048 PPC64TimerDxe.efi
  InstallProtocolInterface: BC62157E-3E33-4FEC-9920-2D3B36D750DF FFDE7798
  InstallProtocolInterface: 26BACCB3-6F42-11D4-BCE7-0080C73C8881 FFD85008
  Loading driver 42857F0A-13F2-4B21-8A23-53D3F714B840
  InstallProtocolInterface: 5B1B31A1-9562-11D2-8E3F-00A0C969723B FFDE6B40
  Loading driver at 0x000FFD6A000 EntryPoint=0x000FFD72028 CapsuleRuntimeDxe.efi
  InstallProtocolInterface: BC62157E-3E33-4FEC-9920-2D3B36D750DF FFDE6298
  InstallProtocolInterface: 5053697E-2CBC-4819-90D9-0580DEEE5754 0
  Loading driver AD608272-D07F-4964-801E-7BD3B7888652
  InstallProtocolInterface: 5B1B31A1-9562-11D2-8E3F-00A0C969723B FFDE6500
  Loading driver at 0x000FFD61000 EntryPoint=0x000FFD68028 MonotonicCounterRuntimeDxe.efi
  InstallProtocolInterface: BC62157E-3E33-4FEC-9920-2D3B36D750DF FFDE0E58
  InstallProtocolInterface: 1DA97072-BDDC-4B30-99F1-72A0B56FFF2A 0
  Loading driver EBF342FE-B1D3-4EF8-957C-8048606FF671
  InstallProtocolInterface: 5B1B31A1-9562-11D2-8E3F-00A0C969723B FFDE0700
  Loading driver at 0x000FFCA0000 EntryPoint=0x000FFCD0138 SetupBrowser.efi
  InstallProtocolInterface: BC62157E-3E33-4FEC-9920-2D3B36D750DF FFDE0198
  InstallProtocolInterface: B9D4C360-BCFB-4F9B-9298-53C136982258 FFCD0020
  InstallProtocolInterface: A770C357-B693-4E6D-A6CF-D21C728E550B FFCD0050
  InstallProtocolInterface: 1F73B18D-4630-43C1-A1DE-6F80855D7DA4 FFCD0030
  Loading driver FC5C7020-1A48-4198-9BE2-EAD5ABC8CF2F
  InstallProtocolInterface: 5B1B31A1-9562-11D2-8E3F-00A0C969723B FFDDF140
  Loading driver at 0x000FFBAB000 EntryPoint=0x000FFBFB138 BdsDxe.efi
  InstallProtocolInterface: BC62157E-3E33-4FEC-9920-2D3B36D750DF FFDDF8D8
  InstallProtocolInterface: 665E3FF6-46CC-11D4-9A38-0090273FC14D FFBF9008
  Loading driver F099D67F-71AE-4C36-B2A3-DCEB0EB2B7D8
  InstallProtocolInterface: 5B1B31A1-9562-11D2-8E3F-00A0C969723B FFDDE980
  Loading driver at 0x000FFD01000 EntryPoint=0x000FFD07038 WatchdogTimer.efi
  InstallProtocolInterface: BC62157E-3E33-4FEC-9920-2D3B36D750DF FFDDEB58
  InstallProtocolInterface: 665E3FF5-46CC-11D4-9A38-0090273FC14D FFD07008
  Loading driver E660EA85-058E-4B55-A54B-F02F83A24707
  InstallProtocolInterface: 5B1B31A1-9562-11D2-8E3F-00A0C969723B FFD7E040
  Loading driver at 0x000FFC77000 EntryPoint=0x000FFC9D128 DisplayEngine.efi
  InstallProtocolInterface: BC62157E-3E33-4FEC-9920-2D3B36D750DF FFD7EE58
  InstallProtocolInterface: 9BBE29E9-FDA1-41EC-AD52-452213742D2E FFC9D0D8
  Loading driver 51CCF399-4FDF-4E55-A45B-E123F84D456A
  InstallProtocolInterface: 5B1B31A1-9562-11D2-8E3F-00A0C969723B FFD7B1C0
  Loading driver at 0x000FFCEA000 EntryPoint=0x000FFCF30D8 ConPlatformDxe.efi
  InstallProtocolInterface: BC62157E-3E33-4FEC-9920-2D3B36D750DF FFD7B398
  InstallProtocolInterface: 18A031AB-B443-4D1A-A5C0-0C09261E9F71 FFCF3008
  InstallProtocolInterface: 107A772C-D5E1-11D4-9A46-0090273FC14D FFCF3068
  InstallProtocolInterface: 6A7A5CFF-E8D9-4F70-BADA-75AB3025CE14 FFCF3080
  InstallProtocolInterface: 18A031AB-B443-4D1A-A5C0-0C09261E9F71 FFCF3038
  InstallProtocolInterface: 107A772C-D5E1-11D4-9A46-0090273FC14D FFCF3068
  InstallProtocolInterface: 6A7A5CFF-E8D9-4F70-BADA-75AB3025CE14 FFCF3080
  Loading driver 9E863906-A40F-4875-977F-5B93FF237FC6
  InstallProtocolInterface: 5B1B31A1-9562-11D2-8E3F-00A0C969723B FFD7A140
  Loading driver at 0x000FFCD4000 EntryPoint=0x000FFCE7328 TerminalDxe.efi
  InstallProtocolInterface: BC62157E-3E33-4FEC-9920-2D3B36D750DF FFD7A858
  InstallProtocolInterface: 18A031AB-B443-4D1A-A5C0-0C09261E9F71 FFCE7018
  InstallProtocolInterface: 107A772C-D5E1-11D4-9A46-0090273FC14D FFCE71A0
  InstallProtocolInterface: 6A7A5CFF-E8D9-4F70-BADA-75AB3025CE14 FFCE71B8
  Loading driver CD3BAFB6-50FB-4FE8-8E4E-AB74D2C1A600
  InstallProtocolInterface: 5B1B31A1-9562-11D2-8E3F-00A0C969723B FFD77040
  Loading driver at 0x000FFC6F000 EntryPoint=0x000FFC750B8 EnglishDxe.efi
  InstallProtocolInterface: BC62157E-3E33-4FEC-9920-2D3B36D750DF FFD7A518
  InstallProtocolInterface: 1D85CD7F-F43D-11D2-9A0C-0090273FC14D FFC75028
  InstallProtocolInterface: A4C751FC-23AE-4C3E-92E9-4964CF63F349 FFC75060
  [BdsDxe] Locate Variable Lock protocol - Not Found
  Variable Driver Auto Update Lang, Lang:eng, PlatformLang:en
  InstallProtocolInterface: 09576E91-6D3F-11D2-8E39-00A0C969723B FFBF9EBA
  InstallProtocolInterface: 330D4706-F2A0-4E4F-A369-B66FA8D54385 FFBF9E80
  InstallProtocolInterface: 09576E91-6D3F-11D2-8E39-00A0C969723B FFBF9ED2
  InstallProtocolInterface: 330D4706-F2A0-4E4F-A369-B66FA8D54385 FFBF9E98
  InstallProtocolInterface: 09576E91-6D3F-11D2-8E39-00A0C969723B FFBF9F30
  InstallProtocolInterface: 330D4706-F2A0-4E4F-A369-B66FA8D54385 FFBF9F60
  InstallProtocolInterface: 09576E91-6D3F-11D2-8E39-00A0C969723B FFBF9E40
  InstallProtocolInterface: 330D4706-F2A0-4E4F-A369-B66FA8D54385 FFBF9E28
  MemoryProtectionAttribute - 0x0000000000000001
  InstallProtocolInterface: 9E863906-A40F-4875-977F-5B93FF237FC6 FFCFE298
  Terminal - Mode 0, Column = 80, Row = 25
  Terminal - Mode 1, Column = 80, Row = 50
  Terminal - Mode 2, Column = 100, Row = 31
  ...
  UEFI Interactive Shell v2.187477C2-69C7-11D2-8E39-00A0C969723B FFC61720
  EDK IIlProtocolInterface: 752F3136-4E16-4FDC-A22A-E5F46812F4CA FFC67C58
  UEFI v2.50 (EDK II, 0x00010000)008-7F9B-4F30-87AC-60C9FEF5DA4E FF8EE168
  map: No mapping found.
  Press ESC in 5 seconds to skip startup.nsh or any other key to continue.
  Shell>
  Shell> devtree
   Ctrl[03] MemoryMapped(0xB,0x40000000,0x4035DFFF)
   Ctrl[18] VenHw(D3987D4B-971A-435F-8CAF-4967EB627241)/Uart(115200,8,N,1)
     Ctrl[33] Tty Terminal Serial Console
   Ctrl[2F] VenHw(3EBFA8E6-511D-4B5B-A95F-FB38260F1C27)
   Ctrl[30] VenHw(F76E0A70-B5ED-4C38-AC9A-E5F54BF16E34)
   Ctrl[31] VenHw(847BC3FE-B974-446D-9449-5AD5412E993B)
   Ctrl[32] VenHw(9E0C30BC-3F06-4BA6-8288-09179B855DBE)
  Shell>
  Shell> ver -_fv
  UEFI Interactive Shell v2.1
  EDK II
  UEFI v2.50 (EDK II, 0x00010000)
  PPC64LE Prototype
  Shell>

Architecture considerations
===========================

TianoCore runs in HV mode and uses the hypervisor decrementer. Future
work may consider autodetecting and being capable of running in priviledged
mode only (such as in a VM).

Code is currently built with ABIv1 to avoid --emit-relocs creating a bunch
of 16-bit TOC relocations that I have no hope of converting to PE32+ base relocs.

It seems that it should be possible to build as PIE (ET_DYN) ABIv2 and convert
R_PPC64_RELATIVE to base relocs as well, but that will involve a bit more
changes to GenFw/ElfConvert, as the later deals with section-specific
".rela.blah" sections, not runtime ".rela" that has no section back-
reference. In the end I think that's the only agreeable approach
(who wants to call an ABIv1 EFI runtime service from an ABIv2 OS? not me...),
but I'd rather make some forward progress without turtling more with the
build tools.

Platform considerations
=======================

The booting flow on a PowerNV machine would look something like:

-----------  
| hostboot |   This is the low-level initialization.
------------
     |
-----v------
| skiboot  |   This is the OPAL firmware.
------------
     |
-----v------
|   Ipl    |   This is UEFI loader that uses passed FDT and OPAL.
------------
     |
-----v------
|   DXE    |   This is proper UEFI.
------------
     |
-----v------
|   BDS    |   This is proper UEFI: we chose to boot an OS here.
------------
     |
-----v------
|    OS    |   OS can use FDT or ACPI.
------------

The approach taken is encouraged by AArch32 UEFI implementations
and by AArch64 Xen/QEMU virtual UEFI. A lot of EmbeddedPkg
components and design decisions are leveraged.

Contact Info
============

Andrei Warkentin (andrey.warkentin@gmail.com).
